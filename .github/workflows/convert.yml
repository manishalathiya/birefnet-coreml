- name: Convert BiRefNet to CoreML
  run: |
    python3 - <<'EOF'
    import torch
    import coremltools as ct
    from transformers import AutoModelForImageSegmentation

    print("ðŸš€ Loading BiRefNet with trust_remote_code=True")
    model = AutoModelForImageSegmentation.from_pretrained(
        "ZhengPeng7/BiRefNet_lite",
        trust_remote_code=True
    )
    model.eval()

    example_input = torch.rand(1, 3, 512, 512)

    print("âš¡ Tracing model...")
    traced = torch.jit.trace(model, example_input)
    traced.save("birefnet_lite_traced.pt")

    print("ðŸ§  Converting to CoreML...")
    mlmodel = ct.convert(
        traced,
        inputs=[ct.ImageType(name="input_image", shape=example_input.shape, scale=1/255.0)],
        convert_to="mlprogram",
        compute_units=ct.ComputeUnit.ALL,
    )

    print("ðŸ“¦ Optimizing precision for iOS (FP16)...")
    mlmodel = ct.models.neural_network.quantization_utils.quantize_weights(
        mlmodel, nbits=16
    )
    mlmodel.save("BiRefNetBackgroundRemoval.mlmodel")
    print("âœ… Done â€” BiRefNetBackgroundRemoval.mlmodel saved")
    EOF
